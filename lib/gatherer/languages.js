// Generated by CoffeeScript 1.7.1
(function() {
  var cheerio, extract, fetch, gatherer, languages, merge, pagination, _;

  cheerio = require('cheerio');

  _ = require('underscore');

  gatherer = require('../gatherer');

  languages = require('../languages');

  pagination = require('../pagination');

  module.exports = function(details, callback) {
    var $$;
    $$ = function(fn) {
      return function(err, res, body) {
        if (err) {
          return callback(err);
        } else {
          return fn(body);
        }
      };
    };
    fetch(1, details, $$(function(html) {
      var $, max, page, results, _i, _results;
      $ = cheerio.load(html);
      max = pagination($('#ctl00_ctl00_ctl00_MainContent_SubContent_SubContent_languageList_pagingControls')).max;
      if (max === 1) {
        callback(null, merge(extract($)));
        return;
      }
      results = [extract($)];
      _results = [];
      for (page = _i = 2; 2 <= max ? _i <= max : _i >= max; page = 2 <= max ? ++_i : --_i) {
        _results.push(fetch(page, details, $$(function(html) {
          results.push(extract(cheerio.load(html)));
          if (results.length === max) {
            return callback(null, merge(results));
          }
        })));
      }
      return _results;
    }));
  };

  fetch = function(page, details, callback) {
    var url;
    url = gatherer.card.url('Languages.aspx', details, {
      page: page
    });
    return gatherer.request(url, callback);
  };

  extract = function($) {
    return _.chain($('tr.cardItem')).map(cheerio).invoke('children').map(function($children) {
      return {
        code: languages[$children.eq(1).text().trim()],
        name: $children.eq(0).text().trim(),
        id: +$children.eq(0).find('a').attr('href').match(/multiverseid=(\d+)/)[1]
      };
    }).value();
  };

  merge = function(results) {
    return _.chain(results).flatten(true).sortBy('id').groupBy('code').map(function(triplets, code) {
      return [
        code, {
          name: triplets[0].name,
          ids: _.pluck(triplets, 'id')
        }
      ];
    }).object().value();
  };

}).call(this);
